DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_user_like CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS film_director CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS review_likes CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;

DROP TABLE IF EXISTS feed_events CASCADE;
DROP TABLE IF EXISTS eventTypes CASCADE;
DROP TABLE IF EXISTS operations CASCADE;
DROP TABLE IF EXISTS event_to_user CASCADE;
DROP TABLE IF EXISTS event_to_film CASCADE;
DROP TABLE IF EXISTS event_to_review CASCADE;

CREATE TABLE IF NOT EXISTS friends (
  user_id bigint,
  friend_id bigint,
  UNIQUE (user_id,friend_id)
);

CREATE TABLE IF NOT EXISTS directors (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar
);

CREATE TABLE IF NOT EXISTS film_director (
  film_id bigint,
  director_id bigint,
  UNIQUE (film_id,director_id)
);

CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar,
  login varchar,
  name varchar,
  birthday timestamp
);

CREATE TABLE IF NOT EXISTS films (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar,
  release_date timestamp,
  duration integer,
  rating_id integer
);

CREATE TABLE IF NOT EXISTS rating (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id bigint,
  genre_id integer,
  UNIQUE (film_id,genre_id)
);

CREATE TABLE IF NOT EXISTS genres (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS film_user_like (
  film_id bigint,
  user_id bigint,
  UNIQUE (film_id,user_id)
);

CREATE TABLE IF NOT EXISTS reviews (
  review_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  content varchar NOT NULL,
  is_positive BOOLEAN NOT NULL,
  user_id bigint NOT NULL,
  film_id bigint NOT NULL,
  useful INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS review_likes (
  review_id bigint NOT NULL,
  user_id bigint NOT NULL,
  is_like BOOLEAN NOT NULL,
  PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS feed_events (
 id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
 timestamp timestamp,
 user_id bigint,
 eventType_id integer,
 operation_id integer,
 entity_id bigint
);

CREATE TABLE IF NOT EXISTS eventTypes (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS operations (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

ALTER TABLE friends ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE friends ADD FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE films ADD FOREIGN KEY (rating_id) REFERENCES rating (id);

ALTER TABLE film_genre ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_genre ADD FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE CASCADE;

ALTER TABLE film_user_like ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_user_like ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE reviews ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE reviews ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE review_likes ADD FOREIGN KEY (review_id) REFERENCES reviews (review_id) ON DELETE CASCADE;

ALTER TABLE review_likes ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE film_director ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_director ADD FOREIGN KEY (director_id) REFERENCES directors (id) ON DELETE CASCADE;

ALTER TABLE feed_events ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE feed_events ADD FOREIGN KEY (eventType_id) REFERENCES eventTypes (id);

ALTER TABLE feed_events ADD FOREIGN KEY (operation_id) REFERENCES operations (id);
