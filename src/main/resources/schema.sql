DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_user_like CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;

CREATE TABLE IF NOT EXISTS friends (
  user_id bigint,
  friend_id bigint,
  UNIQUE (user_id,friend_id)
);

CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar,
  login varchar,
  name varchar,
  birthday timestamp
);

CREATE TABLE IF NOT EXISTS films (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar,
  release_date timestamp,
  duration integer,
  rating_id integer
);

CREATE TABLE IF NOT EXISTS rating (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id bigint,
  genre_id integer,
  UNIQUE (film_id,genre_id)
);

CREATE TABLE IF NOT EXISTS genres (
  id integer PRIMARY KEY,
  name varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS film_user_like (
  film_id bigint,
  user_id bigint,
  UNIQUE (film_id,user_id)
);

ALTER TABLE friends ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE friends ADD FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE films ADD FOREIGN KEY (rating_id) REFERENCES rating (id);

ALTER TABLE film_genre ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_genre ADD FOREIGN KEY (genre_id) REFERENCES genres (id);

ALTER TABLE film_user_like ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_user_like ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
